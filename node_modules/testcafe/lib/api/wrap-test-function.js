'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.default = wrapTestFunction;

var _testController = require('./test-controller');

var _testController2 = _interopRequireDefault(_testController);

var _testRunTracker = require('./test-run-tracker');

var _testRunTracker2 = _interopRequireDefault(_testRunTracker);

var _errorList = require('../errors/error-list');

var _errorList2 = _interopRequireDefault(_errorList);

var _testRun = require('../errors/test-run');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function wrapTestFunction(fn) {
    return (() => {
        var _ref = (0, _asyncToGenerator3.default)(function* (testRun) {
            var result = null;
            var errList = new _errorList2.default();
            var markeredfn = _testRunTracker2.default.addTrackingMarkerToFunction(testRun.id, fn);

            testRun.controller = new _testController2.default(testRun);

            _testRunTracker2.default.ensureEnabled();

            try {
                result = yield markeredfn(testRun.controller);
            } catch (err) {
                errList.addError(err);
            }

            testRun.controller.callsitesWithoutAwait.forEach(function (callsite) {
                errList.addError(new _testRun.MissingAwaitError(callsite));
            });

            if (errList.hasErrors) throw errList;

            return result;
        });

        return function (_x) {
            return _ref.apply(this, arguments);
        };
    })();
}
module.exports = exports['default'];