'use strict';

exports.__esModule = true;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

// Validations
let getValidHostname = (() => {
    var _ref = (0, _asyncToGenerator3.default)(function* (hostname) {
        if (hostname) {
            var valid = yield endpointUtils.isMyHostname(hostname);

            if (!valid) throw new _runtime.GeneralError(_message2.default.invalidHostname, hostname);
        } else hostname = endpointUtils.getIPAddress();

        return hostname;
    });

    return function getValidHostname(_x) {
        return _ref.apply(this, arguments);
    };
})();

let getValidPort = (() => {
    var _ref2 = (0, _asyncToGenerator3.default)(function* (port) {
        if (port) {
            var isFree = yield endpointUtils.isFreePort(port);

            if (!isFree) throw new _runtime.GeneralError(_message2.default.portIsNotFree, port);
        } else port = yield endpointUtils.getFreePort();

        return port;
    });

    return function getValidPort(_x2) {
        return _ref2.apply(this, arguments);
    };
})();

// API


let createTestCafe = (() => {
    var _ref3 = (0, _asyncToGenerator3.default)(function* (hostname, port1, port2, sslOptions, developmentMode) {
        var _ref4 = yield _pinkie2.default.all([getValidHostname(hostname), getValidPort(port1), getValidPort(port2)]);

        hostname = _ref4[0];
        port1 = _ref4[1];
        port2 = _ref4[2];


        const testcafe = new _testcafe2.default(hostname, port1, port2, sslOptions, developmentMode);

        (0, _asyncExitHook2.default)(function (cb) {
            return testcafe.close().then(cb);
        });

        return testcafe;
    });

    return function createTestCafe(_x3, _x4, _x5, _x6, _x7) {
        return _ref3.apply(this, arguments);
    };
})();

// Embedding utils


var _pinkie = require('pinkie');

var _pinkie2 = _interopRequireDefault(_pinkie);

var _testcafe = require('./testcafe');

var _testcafe2 = _interopRequireDefault(_testcafe);

var _endpointUtils = require('endpoint-utils');

var endpointUtils = _interopRequireWildcard(_endpointUtils);

var _asyncExitHook = require('async-exit-hook');

var _asyncExitHook2 = _interopRequireDefault(_asyncExitHook);

var _runtime = require('./errors/runtime');

var _message = require('./errors/runtime/message');

var _message2 = _interopRequireDefault(_message);

var _embeddingUtils = require('./embedding-utils');

var _embeddingUtils2 = _interopRequireDefault(_embeddingUtils);

var _exportableLib = require('./api/exportable-lib');

var _exportableLib2 = _interopRequireDefault(_exportableLib);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

createTestCafe.embeddingUtils = _embeddingUtils2.default;

// Common API
(0, _keys2.default)(_exportableLib2.default).forEach(key => {
    createTestCafe[key] = _exportableLib2.default[key];
});

exports.default = createTestCafe;
module.exports = exports['default'];