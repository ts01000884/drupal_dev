'use strict';

exports.__esModule = true;

var _stringify = require('babel-runtime/core-js/json/stringify');

var _stringify2 = _interopRequireDefault(_stringify);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _phase = require('../test-run/phase');

var _phase2 = _interopRequireDefault(_phase);

var _type = require('../errors/test-run/type');

var _type2 = _interopRequireDefault(_type);

var _actions = require('./commands/actions');

var _testRun = require('../errors/test-run');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class TestRunBookmark {
    constructor(testRun, role) {
        this.testRun = testRun;
        this.role = role;

        this.url = 'about:blank';
        this.dialogHandler = testRun.activeDialogHandler;
        this.iframeSelector = testRun.activeIframeSelector;
        this.speed = testRun.speed;
        this.pageLoadTimeout = testRun.pageLoadTimeout;
        this.ctx = testRun.ctx;
        this.fixtureCtx = testRun.fixtureCtx;
        this.consoleMessages = testRun.consoleMessages;
    }

    init() {
        var _this = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this.testRun.activeIframeSelector) yield _this.testRun.executeCommand(new _actions.SwitchToMainWindowCommand());

            if (!_this.role.opts.preserveUrl) _this.url = yield _this.testRun.getCurrentUrl();
        })();
    }

    _restoreDialogHandler() {
        var _this2 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this2.testRun.activeDialogHandler !== _this2.dialogHandler) {
                var restoreDialogCommand = new _actions.SetNativeDialogHandlerCommand({ dialogHandler: { fn: _this2.dialogHandler } });

                yield _this2.testRun.executeCommand(restoreDialogCommand);
            }
        })();
    }

    _restoreSpeed() {
        var _this3 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this3.testRun.speed !== _this3.speed) {
                var restoreSpeedCommand = new _actions.SetTestSpeedCommand({ speed: _this3.speed });

                yield _this3.testRun.executeCommand(restoreSpeedCommand);
            }
        })();
    }

    _restorePageLoadTimeout() {
        var _this4 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this4.testRun.pageLoadTimeout !== _this4.pageLoadTimeout) {
                var restorePageLoadTimeoutCommand = new _actions.SetPageLoadTimeoutCommand({ duration: _this4.pageLoadTimeout });

                yield _this4.testRun.executeCommand(restorePageLoadTimeoutCommand);
            }
        })();
    }

    _restoreWorkingFrame() {
        var _this5 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this5.testRun.activeIframeSelector !== _this5.iframeSelector) {
                var switchWorkingFrameCommand = _this5.iframeSelector ? new _actions.SwitchToIframeCommand({ selector: _this5.iframeSelector }) : new _actions.SwitchToMainWindowCommand();

                try {
                    yield _this5.testRun.executeCommand(switchWorkingFrameCommand);
                } catch (err) {
                    if (err.type === _type2.default.actionElementNotFoundError) throw new _testRun.CurrentIframeNotFoundError();

                    if (err.type === _type2.default.actionIframeIsNotLoadedError) throw new _testRun.CurrentIframeIsNotLoadedError();

                    throw err;
                }
            }
        })();
    }

    _restorePage(url, stateSnapshot) {
        var _this6 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            var navigateCommand = new _actions.NavigateToCommand({ url, stateSnapshot });

            yield _this6.testRun.executeCommand(navigateCommand);
        })();
    }

    restore(callsite, stateSnapshot) {
        var _this7 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            var prevPhase = _this7.testRun.phase;

            _this7.testRun.phase = _phase2.default.inBookmarkRestore;

            _this7.testRun.ctx = _this7.ctx;
            _this7.testRun.fixtureCtx = _this7.fixtureCtx;
            _this7.testRun.consoleMessages = _this7.consoleMessages;

            try {
                yield _this7._restoreSpeed();
                yield _this7._restorePageLoadTimeout();
                yield _this7._restoreDialogHandler();

                var preserveUrl = _this7.role.opts.preserveUrl;
                var url = preserveUrl ? _this7.role.url : _this7.url;

                yield _this7._restorePage(url, (0, _stringify2.default)(stateSnapshot));

                if (!preserveUrl) yield _this7._restoreWorkingFrame();
            } catch (err) {
                err.callsite = callsite;

                throw err;
            }

            _this7.testRun.phase = prevPhase;
        })();
    }
}
exports.default = TestRunBookmark;
module.exports = exports['default'];