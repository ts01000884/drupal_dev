'use strict';

exports.__esModule = true;

var _testcafeHammerhead = require('testcafe-hammerhead');

var _lodash = require('lodash');

class RequestHook {
    constructor(requestFilterRules, responseEventConfigureOpts) {
        this.requestFilterRules = this._prepareRequestFilterRules(requestFilterRules);
        this._instantiatedRequestFilterRules = [];
        this.responseEventConfigureOpts = responseEventConfigureOpts;

        this.warningLog = null;
    }

    _prepareRequestFilterRules(rules) {
        if (rules) return (0, _lodash.castArray)(rules);

        return [_testcafeHammerhead.RequestFilterRule.ANY];
    }

    _instantiateRequestFilterRules() {
        this.requestFilterRules.forEach(rule => {
            if (rule instanceof _testcafeHammerhead.RequestFilterRule) this._instantiatedRequestFilterRules.push(rule);else this._instantiatedRequestFilterRules.push(new _testcafeHammerhead.RequestFilterRule(rule));
        });
    }

    onRequest() /*RequestEvent event*/{
        throw new Error('Not implemented');
    }

    _onConfigureResponse(event) {
        if (!this.responseEventConfigureOpts) return;

        event.opts.includeHeaders = this.responseEventConfigureOpts.includeHeaders;
        event.opts.includeBody = this.responseEventConfigureOpts.includeBody;
    }

    onResponse() /*ResponseEvent event*/{
        throw new Error('Not implemented');
    }
}
exports.default = RequestHook;
module.exports = exports['default'];