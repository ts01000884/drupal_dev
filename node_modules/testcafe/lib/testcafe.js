'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _pinkie = require('pinkie');

var _pinkie2 = _interopRequireDefault(_pinkie);

var _readFileRelative = require('read-file-relative');

var _testcafeHammerhead = require('testcafe-hammerhead');

var _testcafeLegacyApi = require('testcafe-legacy-api');

var _gateway = require('./browser/connection/gateway');

var _gateway2 = _interopRequireDefault(_gateway);

var _connection = require('./browser/connection');

var _connection2 = _interopRequireDefault(_connection);

var _pool = require('./browser/provider/pool');

var _pool2 = _interopRequireDefault(_pool);

var _runner = require('./runner');

var _runner2 = _interopRequireDefault(_runner);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Const
const UI_STYLE = (0, _readFileRelative.readSync)('./client/ui/styles.css');
const UI_SPRITE = (0, _readFileRelative.readSync)('./client/ui/sprite.png', true);
const FAVICON = (0, _readFileRelative.readSync)('./client/ui/favicon.ico', true);

class TestCafe {
    constructor(hostname, port1, port2, sslOptions, developmentMode) {
        this.closed = false;
        this.proxy = new _testcafeHammerhead.Proxy(hostname, port1, port2, sslOptions, developmentMode);
        this.browserConnectionGateway = new _gateway2.default(this.proxy);
        this.runners = [];

        this._registerAssets(developmentMode);
    }

    _registerAssets(developmentMode) {
        const scriptNameSuffix = developmentMode ? 'js' : 'min.js';
        const coreScript = (0, _readFileRelative.readSync)(`./client/core/index.${scriptNameSuffix}`);
        const driverScript = (0, _readFileRelative.readSync)(`./client/driver/index.${scriptNameSuffix}`);
        const uiScript = (0, _readFileRelative.readSync)(`./client/ui/index.${scriptNameSuffix}`);
        const automationScript = (0, _readFileRelative.readSync)(`./client/automation/index.${scriptNameSuffix}`);

        this.proxy.GET('/testcafe-core.js', { content: coreScript, contentType: 'application/x-javascript' });
        this.proxy.GET('/testcafe-driver.js', { content: driverScript, contentType: 'application/x-javascript' });
        this.proxy.GET('/testcafe-legacy-runner.js', {
            content: _testcafeLegacyApi.CLIENT_RUNNER_SCRIPT,
            contentType: 'application/x-javascript'
        });
        this.proxy.GET('/testcafe-automation.js', { content: automationScript, contentType: 'application/x-javascript' });
        this.proxy.GET('/testcafe-ui.js', { content: uiScript, contentType: 'application/x-javascript' });
        this.proxy.GET('/testcafe-ui-sprite.png', { content: UI_SPRITE, contentType: 'image/png' });
        this.proxy.GET('/favicon.ico', { content: FAVICON, contentType: 'image/x-icon' });

        this.proxy.GET('/testcafe-ui-styles.css', {
            content: UI_STYLE,
            contentType: 'text/css',
            isShadowUIStylesheet: true
        });
    }

    // API
    createBrowserConnection() {
        var _this = this;

        return (0, _asyncToGenerator3.default)(function* () {
            var browserInfo = yield _pool2.default.getBrowserInfo('remote');

            return new _connection2.default(_this.browserConnectionGateway, browserInfo, true);
        })();
    }

    createRunner() {
        var newRunner = new _runner2.default(this.proxy, this.browserConnectionGateway);

        this.runners.push(newRunner);

        return newRunner;
    }

    close() {
        var _this2 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            if (_this2.closed) return;

            _this2.closed = true;

            yield _pinkie2.default.all(_this2.runners.map(function (runner) {
                return runner.stop();
            }));

            yield _pool2.default.dispose();

            _this2.browserConnectionGateway.close();
            _this2.proxy.close();
        })();
    }
}
exports.default = TestCafe;
module.exports = exports['default'];