'use strict';

exports.__esModule = true;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _testcafeBrowserTools = require('testcafe-browser-tools');

var _testcafeBrowserTools2 = _interopRequireDefault(_testcafeBrowserTools);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
    isMultiBrowser: true,

    openBrowser(browserId, pageUrl, browserName) {
        return (0, _asyncToGenerator3.default)(function* () {
            var args = browserName.split(' ');
            var alias = args.shift();

            var browserInfo = yield _testcafeBrowserTools2.default.getBrowserInfo(alias);
            var openParameters = (0, _assign2.default)({}, browserInfo);

            if (args.length) openParameters.cmd = args.join(' ') + (openParameters.cmd ? ' ' + openParameters.cmd : '');

            yield _testcafeBrowserTools2.default.open(openParameters, pageUrl);
        })();
    },

    isLocalBrowser() {
        return (0, _asyncToGenerator3.default)(function* () {
            return true;
        })();
    },

    getBrowserList() {
        return (0, _asyncToGenerator3.default)(function* () {
            var installations = yield _testcafeBrowserTools2.default.getInstallations();

            return (0, _keys2.default)(installations);
        })();
    },

    isValidBrowserName(browserName) {
        var _this = this;

        return (0, _asyncToGenerator3.default)(function* () {
            var browserNames = yield _this.getBrowserList();

            browserName = browserName.toLowerCase().split(' ')[0];

            return browserNames.indexOf(browserName) > -1;
        })();
    }
};
module.exports = exports['default'];